(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{730:function(s,a,r){"use strict";r.r(a);var t=r(14),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,r=s._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("blockquote",[r("p",[s._v("git clone git@gitee.com:vipnols/laradock.git")])]),s._v(" "),r("h2",{attrs:{id:"setting"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#setting"}},[s._v("#")]),s._v(" setting")]),s._v(" "),r("ul",[r("li",[s._v(".env"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v('  TZ="Asia/Shanghai"\n  PHP_VERSION=8.1\n  CHANGE_SOURCE=true # 切换中国源\n\n  # workspace 设置\n  WORKSPACE_COMPOSER_GLOBAL_INSTALL=true    //workspace全局安装composer\n  WORKSPACE_COMPOSER_REPO_PACKAGIST=https://mirrors.aliyun.com/composer/\n  WORKSPACE_NVM_NODEJS_ORG_MIRROR=https://npmmirror.com/mirrors/node\n  WORKSPACE_NPM_REGISTRY=https://registry.npmmirror.com\n  WORKSPACE_INSTALL_LARAVEL_INSTALLER=true    //workspace  laravel安装器\n  WORKSPACE_TIMEZONE="Asia/Shanghai"   //设置workspace时区,默认是UTC\n  WORKSPACE_INSTALL_SUPERVISOR=true // 开启laravel队列需要用到 [Supervisor](#supervisor), Linux 操作系统的进程监视器。  查看本文档的 Supervisor 配置\n  WORKSPACE_INSTALL_SWOOLE=true && PHP_FPM_INSTALL_SWOOLE=true // 启动Swoole 加速 laravel\n  PHP_WORKER_INSTALL_SWOOLE=true\n  PHP_FPM_INSTALL_MONGO=true // 邮件服务\n')])])])]),s._v(" "),r("li",[r("RouterLink",{attrs:{to:"/05.工具/08.mysql.html"}},[s._v("MySql")]),r("br"),s._v("\n默认账号密码有两个： root default\n"),r("ul",[r("li",[s._v("mysql -uroot -proot")]),s._v(" "),r("li",[s._v("mysql -udefault -psecret")])])],1),s._v(" "),r("li",[s._v("workspace/Dockerfile"),r("br"),s._v(" "),r("a",{attrs:{href:"https://learnku.com/articles/35556",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),r("OutboundLink")],1),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("...\n// 添加 nvm 镜像源\nENV NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node \n\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n...\n")])])])]),s._v(" "),r("li",[s._v("alias"),r("br"),s._v("\n在 ~/.zshrs 或 ~/.bash_profile 中添加相应别名"),r("div",{staticClass:"language-vim extra-class"},[r("pre",{pre:!0,attrs:{class:"language-vim"}},[r("code",[s._v("alias golaradock"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cd /Volumes/240数据盘/laradock"')]),s._v("\nalias laraup"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[s._v('"golaradock && docker-compose up -d nginx redis mysql workapce"')]),s._v("\nalias laradown"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[s._v('"golaradock && docker-compose stop"')]),s._v("\nalias laraworker"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[s._v('"golaradock && docker-compose exec --user=laradock workspace bash"')]),s._v("\nalias laramysql"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-compose exec mysql mysql -uroot -proot"')]),s._v("\nalias lararestar"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[s._v('"golaradock && docker-compose restart"')]),s._v("\nalias larastop"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[s._v('"golaradock && docker-compose stop"')]),s._v("\n\n")])])])])]),s._v(" "),r("h2",{attrs:{id:"添加新项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加新项目"}},[s._v("#")]),s._v(" 添加新项目")]),s._v(" "),r("ul",[r("li",[s._v("添加站点\n"),r("ul",[r("li",[s._v("查看docker的IP地址"),r("br"),s._v("\ndocker-machine env")]),s._v(" "),r("li",[s._v("hosts设置（bridge 模式时，IP地址为127.0.0.1）："),r("br"),s._v("\n10.75.0.1  xx.xxx.xx # 容器内部访问需要设定，不然无法访问"),r("br"),s._v("\n127.0.0.1  xx.xxx.xx # 容器外部访问需要设定，不然无法访问")]),s._v(" "),r("li",[s._v("nginx 设置\n"),r("ul",[r("li",[s._v("sites设置\n"),r("ul",[r("li",[s._v("server_name laravel.test;")]),s._v(" "),r("li",[s._v("root /var/www/laravel/public;")])])])])]),s._v(" "),r("li",[s._v("重启nginx 容器")]),s._v(" "),r("li",[s._v("进入mysql 容器\n"),r("ul",[r("li",[s._v("创建 mysql 账号")]),s._v(" "),r("li",[s._v("创建数据库")]),s._v(" "),r("li",[s._v("账号授权、刷新权限")])])])])]),s._v(" "),r("li",[s._v("修改文件的权限 chmod 755"),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" -R storage bootstrap/cache\n")])])])]),s._v(" "),r("li",[s._v("切换root用户 sudo -i")]),s._v(" "),r("li",[s._v("docker-machine command not found"),r("br"),s._v("\nhttps://github.com/docker/machine/releases")])]),s._v(" "),r("h2",{attrs:{id:"enter-a-container"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#enter-a-container"}},[s._v("#")]),s._v(" Enter a Container#")]),s._v(" "),r("p",[s._v("Run commands in a running Container.")]),s._v(" "),r("p",[s._v("1 - First list the currently running containers with docker ps")]),s._v(" "),r("p",[s._v("2 - Enter any container using:")]),s._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[s._v("docker-compose "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("container-name"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),r("p",[s._v("Example: enter MySQL container")]),s._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[s._v("docker-compose "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" mysql "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),r("p",[s._v("Example: enter to MySQL prompt within MySQL container")]),s._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[s._v("docker-compose "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" mysql mysql -udefault -psecret\n\n")])])]),r("p",[s._v("Note: You can add --user=laradock to have files created as your host’s user. Example:")]),s._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[s._v("\ndocker-compose "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --user"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("laradock workspace "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),r("p",[s._v("3 - To exit a container, type exit.")]),s._v(" "),r("h2",{attrs:{id:"start-container"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#start-container"}},[s._v("#")]),s._v(" start container")]),s._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[s._v("docker-compose up -d nginx redis mysql\n")])])]),r("h2",{attrs:{id:"supervisor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#supervisor"}},[s._v("#")]),s._v(" Supervisor")]),s._v(" "),r("p",[s._v("在 mydock/php-worker 中配置 supervisor。")]),s._v(" "),r("p",[s._v("在supervisord.d中有示例文件，根据示例文件创建自己的配置文件，如 web-worker.conf 。")]),s._v(" "),r("h2",{attrs:{id:"error"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[s._v("#")]),s._v(" Error")]),s._v(" "),r("h3",{attrs:{id:"外网连接-错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#外网连接-错误"}},[s._v("#")]),s._v(" 外网连接 错误！")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[s._v("curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused\n    /bin/sh: 1: .: Can't open /home/laradock/.nvm/nvm.sh\n")])])]),r("p",[s._v("在hosts文件中添加 "),r("code",[s._v("151.101.76.133 raw.githubusercontent.com")]),s._v(",如果还是不行，就改代码：")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[s._v("curl -o- https://monitor-majors.oss-cn-shenzhen.aliyuncs.com/install.sh|bash \\\n#curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh|bash \\\n")])])]),r("h3",{attrs:{id:"workspace"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#workspace"}},[s._v("#")]),s._v(" - workspace")]),s._v(" "),r("ul",[r("li",[r("p",[s._v("error: /tmp/sources.sh: not found")]),s._v(" "),r("p",[s._v("解决办法:")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[s._v("   1.vim sources.sh\n   2.:set ff 如果是 dos\n   3.:set ff=unix\n   4.:wq\n   5.重新执行 docker-compose up --build -d xx ")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);